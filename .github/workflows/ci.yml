name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21, 1.22]
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        cache: false  # Disable built-in cache to avoid conflicts

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum', '**/go.mod') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum', '**/go.mod') }}-
          ${{ runner.os }}-go-${{ matrix.go-version }}-

    - name: Install dependencies
      run: make deps

    - name: Run tests
      run: make test

    - name: Run tests with coverage
      run: make test-coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./build/coverage.out
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: false  # Disable built-in cache to avoid conflicts

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-lint-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-lint-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-
          ${{ runner.os }}-lint-go-1.22-

    - name: Install dependencies
      run: make deps

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.59.1
        args: --timeout=10m --verbose
        skip-cache: true
        skip-pkg-cache: true
        skip-build-cache: true

    - name: Run go vet
      run: make vet

    - name: Check formatting
      run: |
        make fmt
        if ! git diff --quiet; then
          echo "Code is not properly formatted"
          git diff
          exit 1
        fi

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: false

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-build-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-build-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-
          ${{ runner.os }}-build-go-1.22-

    - name: Install dependencies
      run: make deps

    - name: Build binary
      run: make build

    - name: Build for production
      run: make build-prod

    - name: Test binary execution
      run: |
        ./build/gander --help || echo "Binary built successfully"

  cross-build:
    name: Cross-platform Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: false

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-cross-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-cross-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-
          ${{ runner.os }}-cross-go-1.22-

    - name: Install dependencies
      run: make deps

    - name: Cross-platform build
      run: make build-cross

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: gander-binaries
        path: build/
        retention-days: 30

  benchmark:
    name: Benchmark
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: false

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-bench-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-bench-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-
          ${{ runner.os }}-bench-go-1.22-

    - name: Install dependencies
      run: make deps

    - name: Run benchmarks
      run: make bench | tee benchmark-results.txt

    - name: Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: benchmark-results.txt
        retention-days: 30

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache: false

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-security-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-${{ github.run_id }}
        restore-keys: |
          ${{ runner.os }}-security-go-1.22-${{ hashFiles('**/go.sum', '**/go.mod') }}-
          ${{ runner.os }}-security-go-1.22-

    - name: Install dependencies
      run: make deps

    - name: Run Go Security Checks
      run: |
        echo "Running go vet security checks..."
        go vet ./...
        echo "Running staticcheck..."
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./... || echo "Staticcheck completed"
        echo "Security checks completed" 